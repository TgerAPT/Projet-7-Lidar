detect.cloiso <- function(laz_norm, resolution = 0.5, line_length = 20, gap_fill = 5, slope_threshold = 5, output_file = "cloisonnements_norm.gpkg") {
  
  if (is.null(laz_norm) || npoints(laz_norm) == 0) {
    stop("Le fichier LAZ est vide ou n'a pas été chargé correctement.")
  }
  
  # 1. Créer un MNT à haute résolution
  mnt <- grid_terrain(laz_norm, res = resolution, algorithm = tin())
  
  # 2. Calculer la pente
  slope <- terrain(mnt, opt = "slope", unit = "degrees")
  
  # 3. Identifier les zones planes (potentiels cloisonnements)
  flat_areas <- slope < slope_threshold
  
  # 4. Convertir en matrice pour le traitement
  img_matrix <- as.matrix(flat_areas)
  
  # 5. Appliquer un filtre morphologique pour nettoyer l'image
  kernel <- matrix(1, nrow = 5, ncol = 5)
  img_clean <- EBImage::dilate(EBImage::erode(img_matrix, kernel), kernel)

